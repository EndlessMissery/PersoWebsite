{"ast":null,"code":"var _jsxFileName = \"/Volumes/ /Productivity/Coding/PersonalWebsite/my-portfolio-website/src/components/RightSide/Scrolls/SlideContent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\"; // Import AnimatePresence and motion\nimport \"../../../styles/main.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SlideContent = ({\n  slide\n}) => {\n  _s();\n  const [isVisible, setIsVisible] = useState(false);\n  useEffect(() => {\n    // Set content visibility to true when it is loaded\n    setIsVisible(true);\n\n    // Reset visibility when the content is unloaded\n    return () => setIsVisible(false);\n  }, [slide]);\n  if (!slide || !slide.image && !slide.text) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slide-content\",\n      children: \"No content available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slide-content\",\n    children: [/*#__PURE__*/_jsxDEV(AnimatePresence, {\n      mode: \"wait\",\n      children: slide.image && /*#__PURE__*/_jsxDEV(motion.img, {\n        // Use the image path as the key for AnimatePresence\n        src: slide.image,\n        alt: slide.text || \"No description available\",\n        className: \"slide-image\",\n        initial: {\n          opacity: 0\n        } // Initial state: image is invisible\n        ,\n        animate: {\n          opacity: 1\n        } // Final state: image is visible\n        ,\n        exit: {\n          opacity: 0\n        } // Exit state: image fades out\n        ,\n        transition: {\n          duration: 2.5\n        } // Transition duration\n      }, slide.image, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), slide.text && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slide-text\",\n      children: slide.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(SlideContent, \"J3yJOyGdBT4L7hs1p1XQYVGMdrY=\");\n_c = SlideContent;\nexport default SlideContent;\nvar _c;\n$RefreshReg$(_c, \"SlideContent\");","map":{"version":3,"names":["React","useState","useEffect","motion","AnimatePresence","jsxDEV","_jsxDEV","SlideContent","slide","_s","isVisible","setIsVisible","image","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","mode","img","src","alt","initial","opacity","animate","exit","transition","duration","_c","$RefreshReg$"],"sources":["/Volumes/ /Productivity/Coding/PersonalWebsite/my-portfolio-website/src/components/RightSide/Scrolls/SlideContent.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\"; // Import AnimatePresence and motion\nimport \"../../../styles/main.css\";\n\nconst SlideContent = ({ slide }) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    // Set content visibility to true when it is loaded\n    setIsVisible(true);\n\n    // Reset visibility when the content is unloaded\n    return () => setIsVisible(false);\n  }, [slide]);\n\n  if (!slide || (!slide.image && !slide.text)) {\n    return <div className=\"slide-content\">No content available</div>;\n  }\n\n  return (\n    <div className=\"slide-content\">\n      <AnimatePresence mode=\"wait\">\n        {/* Wrap the image with motion.div to animate the transition */}\n        {slide.image && (\n          <motion.img\n            key={slide.image} // Use the image path as the key for AnimatePresence\n            src={slide.image}\n            alt={slide.text || \"No description available\"}\n            className=\"slide-image\"\n            initial={{ opacity: 0 }} // Initial state: image is invisible\n            animate={{ opacity: 1 }} // Final state: image is visible\n            exit={{ opacity: 0 }} // Exit state: image fades out\n            transition={{ duration: 2.5 }} // Transition duration\n          />\n        )}\n      </AnimatePresence>\n      {slide.text && <div className=\"slide-text\">{slide.text}</div>}\n    </div>\n  );\n};\n\nexport default SlideContent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,eAAe,QAAQ,eAAe,CAAC,CAAC;AACzD,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd;IACAS,YAAY,CAAC,IAAI,CAAC;;IAElB;IACA,OAAO,MAAMA,YAAY,CAAC,KAAK,CAAC;EAClC,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;EAEX,IAAI,CAACA,KAAK,IAAK,CAACA,KAAK,CAACI,KAAK,IAAI,CAACJ,KAAK,CAACK,IAAK,EAAE;IAC3C,oBAAOP,OAAA;MAAKQ,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAClE;EAEA,oBACEb,OAAA;IAAKQ,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BT,OAAA,CAACF,eAAe;MAACgB,IAAI,EAAC,MAAM;MAAAL,QAAA,EAEzBP,KAAK,CAACI,KAAK,iBACVN,OAAA,CAACH,MAAM,CAACkB,GAAG;QACS;QAClBC,GAAG,EAAEd,KAAK,CAACI,KAAM;QACjBW,GAAG,EAAEf,KAAK,CAACK,IAAI,IAAI,0BAA2B;QAC9CC,SAAS,EAAC,aAAa;QACvBU,OAAO,EAAE;UAAEC,OAAO,EAAE;QAAE,CAAE,CAAC;QAAA;QACzBC,OAAO,EAAE;UAAED,OAAO,EAAE;QAAE,CAAE,CAAC;QAAA;QACzBE,IAAI,EAAE;UAAEF,OAAO,EAAE;QAAE,CAAE,CAAC;QAAA;QACtBG,UAAU,EAAE;UAAEC,QAAQ,EAAE;QAAI,CAAE,CAAC;MAAA,GAP1BrB,KAAK,CAACI,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQjB;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACc,CAAC,EACjBX,KAAK,CAACK,IAAI,iBAAIP,OAAA;MAAKQ,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAEP,KAAK,CAACK;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEV,CAAC;AAACV,EAAA,CAnCIF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAqClB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}